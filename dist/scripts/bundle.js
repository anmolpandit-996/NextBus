const apiKey="AU_jMzvljRU2bGPyGkq0",streetUrl=`https://api.winnipegtransit.com/v3/streets.json?api-key=${apiKey}`,stopsUrl=`https://api.winnipegtransit.com/v3/stops.json?api-key=${apiKey}`,searchForm=document.forms[0],streetOptionsEle=document.querySelector(".streets"),titleBarEle=document.querySelector("#street-name"),searchStreet=async e=>{const t=await fetch(`${streetUrl}&name=${e}`);e=await t.json();return Response.ok||(titleBarEle.innerHTML="No such street found"),e.streets},getStops=async e=>{const t=await fetch(`${stopsUrl}&street=${e}&usage=long`);return(await t.json()).stops},getStopSchedule=async e=>{const t=await fetch(`https://api.winnipegtransit.com/v3/stops/${e}/schedule.json?api-key=${apiKey}`);return await t.json()},renderStreetsNameHTML=e=>{streetOptionsEle.innerHTML="";for(var t of e)streetOptionsEle.innerHTML+=`<a href="#" data-street-key=${t.key}>${t.name}</a>`},renderTitleBar=e=>{titleBarEle.innerHTML=`Displaying results for ${e[0].street.name}`},renderSchedule=e=>{const t=document.getElementsByTagName("tbody");t[0].innerHTML="";for(var s of e){var r=s["stop-schedule"]["route-schedules"][0]["scheduled-stops"][0].times.arrival.scheduled,r=new Date(r).toLocaleTimeString(void 0,{hour:"2-digit",minute:"2-digit"});t[0].innerHTML+=`
  <tr>
    <td>${s["stop-schedule"].stop.name}</td>
    <td>${s["stop-schedule"].stop["cross-street"].name}</td> 
    <td>${s["stop-schedule"].stop.direction}</td>
    <td>${s["stop-schedule"]["route-schedules"][0].route.number}</td>
    <td>${r}</td>
  </tr>
    `}};searchForm.addEventListener("submit",e=>{e.preventDefault(),searchStreet(e.target[0].value).then(e=>{renderStreetsNameHTML(e)})}),streetOptionsEle.addEventListener("click",e=>{e.preventDefault();e=e.target.getAttribute("data-street-key");getStops(e).then(t=>{const s=[];t.forEach(e=>{s.push(getStopSchedule(e.key))}),Promise.all(s).then(e=>{0!==e.length?(renderTitleBar(t),renderSchedule(e)):alert("Sorry for the inconvenience, no schedule available for now ")})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcGlLZXkiLCJzdHJlZXRVcmwiLCJzdG9wc1VybCIsInNlYXJjaEZvcm0iLCJkb2N1bWVudCIsImZvcm1zIiwic3RyZWV0T3B0aW9uc0VsZSIsInF1ZXJ5U2VsZWN0b3IiLCJ0aXRsZUJhckVsZSIsInNlYXJjaFN0cmVldCIsImFzeW5jIiwic3RyZWV0TmFtZSIsInJlcXVlc3QiLCJmZXRjaCIsImRhdGEiLCJqc29uIiwiUmVzcG9uc2UiLCJvayIsImlubmVySFRNTCIsInN0cmVldHMiLCJnZXRTdG9wcyIsInN0cmVldEtleSIsInN0b3BzIiwiZ2V0U3RvcFNjaGVkdWxlIiwic3RvcEtleSIsInJlbmRlclN0cmVldHNOYW1lSFRNTCIsInN0cmVldCIsImtleSIsIm5hbWUiLCJyZW5kZXJUaXRsZUJhciIsInJlbmRlclNjaGVkdWxlIiwic2NoZWR1bGVUQm9keSIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwic2NoZWR1bGUiLCJzY2hlZHVsZUFycmF5IiwiYnVzRGV0YWlsZWRUaW1lIiwic2NoZWR1bGVkIiwiYnVzVGltZSIsIkRhdGUiLCJ0b0xvY2FsZVRpbWVTdHJpbmciLCJ1bmRlZmluZWQiLCJob3VyIiwibWludXRlIiwic3RvcCIsImRpcmVjdGlvbiIsInJvdXRlIiwibnVtYmVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJ0YXJnZXQiLCJ2YWx1ZSIsInRoZW4iLCJnZXRBdHRyaWJ1dGUiLCJmb3JFYWNoIiwicHVzaCIsImVsZW1lbnQiLCJQcm9taXNlIiwiYWxsIiwic2NoZWR1bGVzIiwibGVuZ3RoIiwiYWxlcnQiXSwibWFwcGluZ3MiOiJBQUFBLE1BQUFBLE9BQUEsdUJBQ0FDLHFFQUFBRCxTQUNBRSxrRUFBQUYsU0FFQUcsV0FBQUMsU0FBQUMsTUFBQSxHQUNBQyxpQkFBQUYsU0FBQUcsY0FBQSxZQUNBQyxZQUFBSixTQUFBRyxjQUFBLGdCQUVBRSxhQUFBQyxNQUFBQyxJQUNBLE1BQUFDLFFBQUFDLFNBQUFaLGtCQUFBVSxLQUNBRyxRQUFBRixFQUFBRyxPQUlBLE9BSEFDLFNBQUFDLEtBQ0FULFlBQUFVLFVBQUEsd0JBRUFKLEVBQUFLLFNBSUFDLFNBQUFWLE1BQUFXLElBQ0EsTUFBQVQsUUFBQUMsU0FBQVgsbUJBQUFtQixnQkFHQSxhQUZBVCxFQUFBRyxRQUVBTyxPQUdBQyxnQkFBQWIsTUFBQWMsSUFDQSxNQUFBWixRQUFBQyxrREFDQVcsMkJBQUF4QixVQUlBLGFBRkFZLEVBQUFHLFFBS0FVLHNCQUFBLElBQ0FuQixpQkFBQVksVUFBQSxHQUNBLElBQUEsSUFBQVEsS0FBQVAsRUFDQWIsaUJBQUFZLDBDQUFBUSxFQUFBQyxPQUFBRCxFQUFBRSxZQUlBQyxlQUFBLElBQ0FyQixZQUFBVSxvQ0FBQUksRUFBQSxHQUFBSSxPQUFBRSxRQUdBRSxlQUFBLElBQ0EsTUFBQUMsRUFBQTNCLFNBQUE0QixxQkFBQSxTQUNBRCxFQUFBLEdBQUFiLFVBQUEsR0FFQSxJQUFBLElBQUFlLEtBQUFDLEVBQUEsQ0FDQSxJQUFBQyxFQUNBRixFQUFBLGlCQUFBLG1CQUFBLEdBQUEsbUJBQUEsR0FFQSxNQUFBLFFBQUFHLFVBRUFDLEVBQUEsSUFBQUMsS0FBQUgsR0FBQUksd0JBQUFDLEVBQUEsQ0FDQUMsS0FBQSxVQUNBQyxPQUFBLFlBR0FYLEVBQUEsR0FBQWI7O1VBRUFlLEVBQUEsaUJBQUFVLEtBQUFmO1VBQ0FLLEVBQUEsaUJBQUFVLEtBQUEsZ0JBQUFmO1VBQ0FLLEVBQUEsaUJBQUFVLEtBQUFDO1VBQ0FYLEVBQUEsaUJBQUEsbUJBQUEsR0FBQVksTUFBQUM7VUFDQVQ7O1FBTUFsQyxXQUFBNEMsaUJBQUEsU0FBQSxJQUNBQyxFQUFBQyxpQkFDQXhDLGFBQUF1QyxFQUFBRSxPQUFBLEdBQUFDLE9BQUFDLEtBQUEsSUFDQTNCLHNCQUFBWCxPQU1BUixpQkFBQXlDLGlCQUFBLFFBQUEsSUFDQUMsRUFBQUMsaUJBQ0E1QixFQUFBMkIsRUFBQUUsT0FBQUcsYUFBQSxtQkFDQWpDLFNBQUFDLEdBQUErQixLQUFBLElBQ0EsTUFBQWxCLEVBQUEsR0FDQXBCLEVBQUF3QyxRQUFBLElBQ0FwQixFQUFBcUIsS0FBQWhDLGdCQUFBaUMsRUFBQTdCLFFBRUE4QixRQUFBQyxJQUFBeEIsR0FBQWtCLEtBQUEsSUFDQSxJQUFBTyxFQUFBQyxRQUNBL0IsZUFBQWYsR0FDQWdCLGVBQUE2QixJQUdBRSxNQUFBIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFwaUtleSA9IFwiQVVfak16dmxqUlUyYkdQeUdrcTBcIjtcbmNvbnN0IHN0cmVldFVybCA9IGBodHRwczovL2FwaS53aW5uaXBlZ3RyYW5zaXQuY29tL3YzL3N0cmVldHMuanNvbj9hcGkta2V5PSR7YXBpS2V5fWA7XG5jb25zdCBzdG9wc1VybCA9IGBodHRwczovL2FwaS53aW5uaXBlZ3RyYW5zaXQuY29tL3YzL3N0b3BzLmpzb24/YXBpLWtleT0ke2FwaUtleX1gO1xuXG5jb25zdCBzZWFyY2hGb3JtID0gZG9jdW1lbnQuZm9ybXNbMF07XG5jb25zdCBzdHJlZXRPcHRpb25zRWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zdHJlZXRzXCIpO1xuY29uc3QgdGl0bGVCYXJFbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3N0cmVldC1uYW1lXCIpO1xuXG5jb25zdCBzZWFyY2hTdHJlZXQgPSBhc3luYyAoc3RyZWV0TmFtZSkgPT4ge1xuICBjb25zdCByZXF1ZXN0ID0gYXdhaXQgZmV0Y2goYCR7c3RyZWV0VXJsfSZuYW1lPSR7c3RyZWV0TmFtZX1gKTtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xuICBpZighUmVzcG9uc2Uub2spe1xuICAgIHRpdGxlQmFyRWxlIC5pbm5lckhUTUwgPWBObyBzdWNoIHN0cmVldCBmb3VuZGA7ICBcbiAgfVxuICByZXR1cm4gZGF0YS5zdHJlZXRzO1xuICBcbn07XG5cbmNvbnN0IGdldFN0b3BzID0gYXN5bmMgKHN0cmVldEtleSkgPT4ge1xuICBjb25zdCByZXF1ZXN0ID0gYXdhaXQgZmV0Y2goYCR7c3RvcHNVcmx9JnN0cmVldD0ke3N0cmVldEtleX0mdXNhZ2U9bG9uZ2ApO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XG5cbiAgcmV0dXJuIGRhdGEuc3RvcHM7XG59O1xuXG5jb25zdCBnZXRTdG9wU2NoZWR1bGUgPSBhc3luYyAoc3RvcEtleSkgPT4ge1xuICBjb25zdCByZXF1ZXN0ID0gYXdhaXQgZmV0Y2goXG4gICAgYGh0dHBzOi8vYXBpLndpbm5pcGVndHJhbnNpdC5jb20vdjMvc3RvcHMvJHtzdG9wS2V5fS9zY2hlZHVsZS5qc29uP2FwaS1rZXk9JHthcGlLZXl9YFxuICApO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XG5cbiAgcmV0dXJuIGRhdGE7XG59O1xuXG5jb25zdCByZW5kZXJTdHJlZXRzTmFtZUhUTUwgPSAoc3RyZWV0cykgPT4ge1xuICBzdHJlZXRPcHRpb25zRWxlLmlubmVySFRNTCA9IFwiXCI7XG4gIGZvciAobGV0IHN0cmVldCBvZiBzdHJlZXRzKSB7XG4gICAgc3RyZWV0T3B0aW9uc0VsZS5pbm5lckhUTUwgKz0gYDxhIGhyZWY9XCIjXCIgZGF0YS1zdHJlZXQta2V5PSR7c3RyZWV0LmtleX0+JHtzdHJlZXQubmFtZX08L2E+YDtcbiAgfVxufTtcblxuY29uc3QgcmVuZGVyVGl0bGVCYXIgPSAoc3RvcHMpID0+IHsgXG4gIHRpdGxlQmFyRWxlLmlubmVySFRNTCA9IGBEaXNwbGF5aW5nIHJlc3VsdHMgZm9yICR7c3RvcHNbMF0uc3RyZWV0Lm5hbWV9YDtcbn07XG5cbmNvbnN0IHJlbmRlclNjaGVkdWxlID0gKHNjaGVkdWxlQXJyYXkpID0+IHtcbiAgY29uc3Qgc2NoZWR1bGVUQm9keSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwidGJvZHlcIik7XG4gIHNjaGVkdWxlVEJvZHlbMF0uaW5uZXJIVE1MID0gXCJcIjtcblxuICBmb3IgKGxldCBzY2hlZHVsZSBvZiBzY2hlZHVsZUFycmF5KSB7XG4gICAgY29uc3QgYnVzRGV0YWlsZWRUaW1lID1cbiAgICAgIHNjaGVkdWxlW1wic3RvcC1zY2hlZHVsZVwiXVtcInJvdXRlLXNjaGVkdWxlc1wiXVswXVtcInNjaGVkdWxlZC1zdG9wc1wiXVswXVtcbiAgICAgICAgXCJ0aW1lc1wiXG4gICAgICBdW1wiYXJyaXZhbFwiXS5zY2hlZHVsZWQ7XG5cbiAgICBjb25zdCBidXNUaW1lID0gbmV3IERhdGUoYnVzRGV0YWlsZWRUaW1lKS50b0xvY2FsZVRpbWVTdHJpbmcodW5kZWZpbmVkLCB7XG4gICAgICBob3VyOiBcIjItZGlnaXRcIixcbiAgICAgIG1pbnV0ZTogXCIyLWRpZ2l0XCIsXG4gICAgfSk7XG5cbiAgICBzY2hlZHVsZVRCb2R5WzBdLmlubmVySFRNTCArPSBgXG4gIDx0cj5cbiAgICA8dGQ+JHtzY2hlZHVsZVtcInN0b3Atc2NoZWR1bGVcIl0uc3RvcC5uYW1lfTwvdGQ+XG4gICAgPHRkPiR7c2NoZWR1bGVbXCJzdG9wLXNjaGVkdWxlXCJdLnN0b3BbXCJjcm9zcy1zdHJlZXRcIl0ubmFtZX08L3RkPiBcbiAgICA8dGQ+JHtzY2hlZHVsZVtcInN0b3Atc2NoZWR1bGVcIl0uc3RvcC5kaXJlY3Rpb259PC90ZD5cbiAgICA8dGQ+JHtzY2hlZHVsZVtcInN0b3Atc2NoZWR1bGVcIl1bXCJyb3V0ZS1zY2hlZHVsZXNcIl1bMF0ucm91dGUubnVtYmVyfTwvdGQ+XG4gICAgPHRkPiR7YnVzVGltZX08L3RkPlxuICA8L3RyPlxuICAgIGA7XG4gIH1cbn07XG5cbnNlYXJjaEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZlbnQpID0+IHtcbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgc2VhcmNoU3RyZWV0KGV2ZW50LnRhcmdldFswXS52YWx1ZSkudGhlbigoZGF0YSkgPT4ge1xuICAgIHJlbmRlclN0cmVldHNOYW1lSFRNTChkYXRhKTtcbiAgICBcbiAgfSk7XG4gIFxufSk7XG5cbnN0cmVldE9wdGlvbnNFbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICBsZXQgc3RyZWV0S2V5ID0gZXZlbnQudGFyZ2V0LmdldEF0dHJpYnV0ZShcImRhdGEtc3RyZWV0LWtleVwiKTtcbiAgZ2V0U3RvcHMoc3RyZWV0S2V5KS50aGVuKChkYXRhKSA9PiB7XG4gICAgY29uc3Qgc2NoZWR1bGVBcnJheSA9IFtdO1xuICAgIGRhdGEuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgICAgc2NoZWR1bGVBcnJheS5wdXNoKGdldFN0b3BTY2hlZHVsZShlbGVtZW50LmtleSkpO1xuICAgIH0pO1xuICAgIFByb21pc2UuYWxsKHNjaGVkdWxlQXJyYXkpLnRoZW4oKHNjaGVkdWxlcykgPT4ge1xuICAgICBpZihzY2hlZHVsZXMubGVuZ3RoIT09MCl7XG4gICAgICByZW5kZXJUaXRsZUJhcihkYXRhKTtcbiAgICAgIHJlbmRlclNjaGVkdWxlKHNjaGVkdWxlcyk7XG4gICAgICBcbiAgICAgfWVsc2V7XG4gICAgICAgIGFsZXJ0KCdTb3JyeSBmb3IgdGhlIGluY29udmVuaWVuY2UsIG5vIHNjaGVkdWxlIGF2YWlsYWJsZSBmb3Igbm93ICcpO1xuICAgICB9XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXX0=
